talsk@campus.technion.ac.il
Tal Skverer
This problem is long but quite simple - we build a directed graph that has V=26 vertices (one for each letter in the English alphabet), which we name 0 (a) to 25 (z), and connect a letter to another letter if it can be translated to it (can be up to E=500 translations).
Then, upon receiving two words, if they're the same length, we iterate over their length (which can be at most L=50) and for each pair of letters we check if there's a path between them in the graph.
If there's a path between all pairs, we print 'yes', otherwise 'no'.
There are a maximum of N=50 word pairs.

The complexity of this is O(N*L*(V + E))) which translates in this case to about 1 million operations.

There were no interesting test cases as I succeeded this problem on the first try after just testing on the given input.